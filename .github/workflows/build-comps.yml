name: Build Components

on:
  push:
  pull_request:

jobs:
  build_components:
    name: Build Components
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    - name: Stack Directory Setup
      run: |
        export STACK_DIR=${HOME}/stack
        mkdir -p ${STACK_DIR}/{include,lib,lib64,bin}
        export LD_LIBRARY_PATH=${STACK_DIR}/lib64:${STACK_DIR}/lib:${LD_LIBRARY_PATH}
        echo "STACK_DIR=${STACK_DIR}" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=${LD_LIBRARY_PATH}" >> $GITHUB_ENV
        echo "${STACK_DIR}/bin" >> $GITHUB_PATH
    - name: Cache Dependencies
      id: cache-libraries-restore
      uses: actions/cache/restore@v3
      with:
        path: ${{env.STACK_DIR}}
        key: stack-${{runner.os}}-${{runner.arch}}
    - name: Install HDF5
      env:
        HDF5_TMP: ${{runner.temp}}/hdf5
        HDF5_URL: https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.12/hdf5-1.12.2/src/hdf5-1.12.2.tar.gz
        CACHE_HIT: ${{steps.cache-libraries-restore.outputs.cache-hit}}
      run: |
        if [[ "$CACHE_HIT" != 'true' ]]; then
          mkdir ${HDF5_TMP}
          cd ${HDF5_TMP}
          curl -L ${{env.HDF5_URL}} | tar --strip-components=2 -xz
          ./configure --quiet --enable-silent-rules --enable-fortran --prefix=${STACK_DIR}
          make all install
        fi
        echo "HDF5_DIR=$STACK_DIR" >> $GITHUB_ENV
    - name: Install NetCDF-C
      env:
        NETCDF_C_TMP: ${{runner.temp}}/netcdf-c
        NETCDF_C_URL: https://github.com/Unidata/netcdf-c/archive/v4.9.0.tar.gz
        CACHE_HIT: ${{steps.cache-libraries-restore.outputs.cache-hit}}
      run: |
        if [[ "$CACHE_HIT" != 'true' ]]; then
          mkdir ${NETCDF_C_TMP}
          cd ${NETCDF_C_TMP}
          curl -L ${{env.NETCDF_C_URL}} | tar --strip-components=1 -xz
          CPPFLAGS=-I${STACK_DIR}/include LDFLAGS=-L${STACK_DIR}/lib ./configure --quiet --enable-silent-rules --prefix=${STACK_DIR}
          make all install
        fi
        echo "NETCDF_DIR=$STACK_DIR" >> $GITHUB_ENV
    - name: Install NetCDF-Fortran
      env:
        NETCDF_FORTRAN_TMP: ${{runner.temp}}/netcdf-fortran
        NETCDF_FORTRAN_URL: https://github.com/Unidata/netcdf-fortran/archive/v4.5.4.tar.gz
        CACHE_HIT: ${{steps.cache-libraries-restore.outputs.cache-hit}}
      run: |
        if [[ "$CACHE_HIT" != 'true' ]]; then
          mkdir ${NETCDF_FORTRAN_TMP}
          cd ${NETCDF_FORTRAN_TMP}
          curl -L ${{env.NETCDF_FORTRAN_URL}} | tar --strip-components=1 -xz
          CPPFLAGS=-I${STACK_DIR}/include LDFLAGS=-L${STACK_DIR}/lib ./configure --quiet --enable-silent-rules --prefix=${STACK_DIR}
          make all install
        fi
        echo "NETCDFF_DIR=$STACK_DIR" >> $GITHUB_ENV
    - name: Cache Dependencies
      id: cache-libraries-save
      uses: actions/cache/save@v3
      with:
        path: ${{env.STACK_DIR}}
        key: ${{steps.cache-libraries-restore.outputs.cache-primary-key}}
    - name: Install ESMF
      uses: ./.github/actions/install-esmf
      with:
        version: latest
    - name: Build and Test
      run: |
        ESMX_Builder apps/wrfhydro.yaml
